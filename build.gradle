plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
}

group = 'dongyang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// web(Thymeleaf)
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.springframework.boot:spring-boot-starter-web'

	// email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//pdf
	implementation group: 'com.lowagie', name: 'itext', version: '2.1.7'

	//jfreechart
	implementation group: 'org.jfree', name: 'jfreechart', version: '1.5.0'

	// mysql
	implementation 'mysql:mysql-connector-java'

	// mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'

	//cloudinary
	implementation 'com.cloudinary:cloudinary-http44:1.33.0'

	//slf4j
	implementation 'org.slf4j:slf4j-api:1.7.36'

	// 시큐리티 관련
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	compileOnly group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'

	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.7.4'


	// jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	implementation 'com.auth0:java-jwt:4.0.0'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	// json
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// jpa
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.4'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// devtools
	implementation 'org.springframework.boot:spring-boot-devtools'


}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	destinationDirectory = file("./target")
}
